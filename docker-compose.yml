name: EBikeCesena

services:
  ride-service:
    image: ride-service
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - ebike-network
    ports:
      - "8080:8080"
      - "8180:8180"
    expose:
      - 8080
      - 8180
    environment:
      DB_USER: "root"
      DB_PASSWORD: "d3fR3@dy!"
      DB_URL: "jdbc:mysql://host.docker.internal:3307/ebcesena2rides"
    healthcheck:
      test: curl --fail http://ride-service:8080/healthCheck || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always
  user-service:
    image: user-service
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - ebike-network
    ports:
      - "8081:8081"
      - "8181:8181"
    expose: 
      - 8081
      - 8181
    environment:
      DB_USER: "root"
      DB_PASSWORD: "d3fR3@dy!"
      DB_URL: "jdbc:mysql://host.docker.internal:3307/ebcesena2"
    healthcheck:
      test: curl --fail http://user-service:8081/healthCheck || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always
  bike-service:
    image: bike-service
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - ebike-network
    ports:
      - "8082:8082"
      - "8182:8182"
    expose:
      - 8082
      - 8182
    environment:
      DB_USER: "root"
      DB_PASSWORD: "d3fR3@dy!"
      DB_URL: "jdbc:mysql://host.docker.internal:3307/ebcesena2bikes"
    healthcheck:
      test: curl --fail http://bike-service:8082/healthCheck || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always
  api-gateway:
    image: api-gateway
    networks:
      - ebike-network
    ports:
      - "5702:5701"
      - "8085:8085"
      - "8185:8185"
    expose: 
      - 8085
      - 8185
    environment:
      HAZELCAST_MEMBER_IP: "192.168.1.79"
    healthcheck:
      test: curl --fail http://api-gateway:8085/healthCheck || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always
  configuration-server:
    image: configuration-server
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - ebike-network
    ports:
      - "8090:8090"
      - "8190:8190"
    expose:
      - 8190
    volumes:
      - C:/UNI/Configurations:/Configurations
    healthcheck:
      test: curl --fail http://configuration-server:8090/healthCheck || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always
  prometheus:
    image: prom/prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - ebike-network
    ports:
      - '9090:9090'
    expose:
      - 9090
networks:
  ebike-network:
    driver: bridge
volumes:
  form: